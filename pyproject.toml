[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [
    "voicetype"
]

[tool.hatch.metadata]
# Necessary for my pynput fork
allow-direct-references = true

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "voicetype/_version.py"

[project]
name = "voicetype"
description = "Type with your voice using hotkey-activated speech recognition"
readme = "README.md"
authors = [{ name = "Adam Lewis" }]
license = "Apache-2.0"
license-files = ["LICENSE"]
requires-python = "<=3.12"
keywords = ["speech-recognition", "voice-typing", "accessibility", "transcription"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Text Processing",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
]
dependencies = [
    # "pyaudio",  # was causing me problems with audio
    "pynput @ git+https://github.com/Adam-D-Lewis/pynput@26fe001ada956c0ad023ea0e3aa3c7dded3526ad",
    "speechrecognition",
    "loguru",
    "pystray",
    "prompt_toolkit",
    "dasbus", # wayland
    # "pygame",  # for sound
    "playsound3", # for sound
    "soundfile",  # for sound recording
    "sounddevice",  # for detecting input devices and recording sound
    "pydantic-settings",
    "toml",
    "aider-chat", # for litellm
]
dynamic = ["version"]

[project.scripts]
voicetype = "voicetype.install:main"
run-voicetype = "voicetype.__main__:main"

[project.optional-dependencies]
dev = [
    "pytest",
    "pre-commit",
]
local = [
    "faster-whisper",
    # system deps on conda-forge
    # "libcublas",
    # "cudnn",

]
[tool.setuptools.packages.find]
include = ["voicetype*"]

[tool.setuptools.package-data]
"*" = ["*.wav"]
# "*" = ["*.css", "*.png"]

[tool.ruff]
fix = true

[tool.ruff.lint]
select = ["I"]

ignore = [
    "E501", # Ignore line too long, because due to black the error can only occur for strings
    "D100", # Ignore missing docstring in public module
    "BLE001", # Ignore bare except
    "EM101",
    "PTH110",
    "TRY003",
]

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.dependencies]
# conda-forge dependencies
python = "<=3.12"

# Define the 'local' feature
[tool.pixi.feature.local]
channels = ["conda-forge"]

# PyPI packages for this feature
[tool.pixi.feature.local.pypi-dependencies]
voicetype = { path = ".", editable = true }

# Conda packages common across all platforms
[tool.pixi.feature.local.dependencies]

# Platform-scoped dependencies
[tool.pixi.feature.local.target.linux-64.dependencies]
libcublas = "<13"  # faster_whisper doesn't seem to support cuda 13 yet
cudnn = "*"
gtk3 = "*"
gobject-introspection = "*"
pygobject = "*"


# Map environments to feature sets
[tool.pixi.environments]
default = ["local"]

[tool.pixi.environments.local]
features = ["local"]
